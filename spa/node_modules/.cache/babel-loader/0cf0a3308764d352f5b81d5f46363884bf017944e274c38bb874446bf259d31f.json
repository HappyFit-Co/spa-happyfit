{"ast":null,"code":"var _jsxFileName = \"C:\\\\spa-happyfit\\\\spa\\\\src\\\\shared\\\\contexts\\\\DrawerContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useCallback, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawerContext = /*#__PURE__*/createContext({});\nexport const useDrawerContext = () => {\n  _s();\n  return useContext(DrawerContext);\n};\n_s(useDrawerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DrawerProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const toggleDrawerOpen = useCallback(() => {\n    setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DrawerContext.Provider, {\n    value: {\n      isDrawerOpen,\n      toggleDrawerOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s2(DrawerProvider, \"usbNxusHfoqO/L8FvBLgG0MWi2g=\");\n_c = DrawerProvider;\nvar _c;\n$RefreshReg$(_c, \"DrawerProvider\");","map":{"version":3,"names":["createContext","useCallback","useContext","useState","jsxDEV","_jsxDEV","DrawerContext","useDrawerContext","_s","DrawerProvider","_ref","_s2","children","isDrawerOpen","setIsDrawerOpen","toggleDrawerOpen","oldDrawerOpen","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/spa-happyfit/spa/src/shared/contexts/DrawerContext.tsx"],"sourcesContent":["import { createContext, useCallback, useContext, useState } from 'react';\r\n\r\ninterface IDrawerContextData {\r\n    isDrawerOpen: boolean;\r\n    toggleDrawerOpen: () => void;\r\n}\r\n\r\nconst DrawerContext = createContext({} as IDrawerContextData);\r\n\r\nexport const useDrawerContext = () => {\r\n    return useContext(DrawerContext);\r\n};\r\n\r\nexport const DrawerProvider: React.FC = ({ children }) => {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n    const toggleDrawerOpen = useCallback(() => {\r\n        setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen);\r\n    }, []);\r\n\r\n    return (\r\n        <DrawerContext.Provider value={{ isDrawerOpen, toggleDrawerOpen }}>\r\n              {children}\r\n        </DrawerContext.Provider>\r\n    );\r\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzE,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC,CAAuB,CAAC;AAE7D,OAAO,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAON,UAAU,CAACI,aAAa,CAAC;AACpC,CAAC;AAACE,EAAA,CAFWD,gBAAgB;AAI7B,OAAO,MAAME,cAAwB,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMY,gBAAgB,GAAGd,WAAW,CAAC,MAAM;IACvCa,eAAe,CAACE,aAAa,IAAI,CAACA,aAAa,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACC,aAAa,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEL,YAAY;MAAEE;IAAiB,CAAE;IAAAH,QAAA,EAC3DA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjC,CAAC;AAACX,GAAA,CAZWF,cAAwB;AAAAc,EAAA,GAAxBd,cAAwB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}