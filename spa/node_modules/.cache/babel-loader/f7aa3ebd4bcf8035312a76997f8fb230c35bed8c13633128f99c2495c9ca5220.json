{"ast":null,"code":"var _jsxFileName = \"C:\\\\spa-happyfit\\\\spa\\\\src\\\\shared\\\\contexts\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useCallback, useContext, useMemo, useState } from \"react\";\nimport { Box, ThemeProvider } from '@mui/material';\nimport '@mui/material';\nimport { DarkTheme, LightTheme } from \"./../themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({});\nexport const useAppThemeContext = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useAppThemeContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AppThemeProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [themeName, setThemeName] = useState('light');\n  const toggleTheme = useCallback(() => {\n    setThemeName(oldThemeName => oldThemeName === 'light' ? 'dark' : 'light');\n  }, []);\n  const theme = useMemo(() => {\n    if (themeName === 'light') return LightTheme;\n    return DarkTheme;\n  }, [themeName]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      themeName,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100vw\",\n        height: \"100vh\",\n        bgcolor: theme.palette.background.default,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s2(AppThemeProvider, \"DiTGdwgS7wpg/n8LtbXEuRECslM=\");\n_c = AppThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"AppThemeProvider\");","map":{"version":3,"names":["createContext","useCallback","useContext","useMemo","useState","Box","ThemeProvider","DarkTheme","LightTheme","jsxDEV","_jsxDEV","ThemeContext","useAppThemeContext","_s","AppThemeProvider","_ref","_s2","children","themeName","setThemeName","toggleTheme","oldThemeName","theme","Provider","value","width","height","bgcolor","palette","background","default","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/spa-happyfit/spa/src/shared/contexts/ThemeContext.tsx"],"sourcesContent":["import { createContext, useCallback, useContext, useMemo, useState } from \"react\";\r\nimport { Box, ThemeProvider } from '@mui/material';\r\nimport {  } from '@mui/material';\r\n\r\nimport { DarkTheme, LightTheme } from \"./../themes\";\r\n\r\ninterface IThemeContextData {\r\n    themeName: 'light' | 'dark';\r\n    toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext({} as IThemeContextData);\r\n\r\nexport const useAppThemeContext = () => {\r\n    return useContext(ThemeContext);\r\n}\r\n\r\nexport const AppThemeProvider: React.FC = ({ children }) => {\r\n    const [themeName, setThemeName] = useState<'light' | 'dark'>('light');\r\n\r\n    const toggleTheme = useCallback(() => {\r\n        setThemeName(oldThemeName => oldThemeName === 'light' ? 'dark' : 'light');\r\n    }, []);\r\n\r\n    const theme = useMemo(() => {\r\n        if (themeName === 'light') return LightTheme;\r\n        return DarkTheme;\r\n    }, [themeName]);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ themeName, toggleTheme }}>\r\n            <ThemeProvider theme={theme}>\r\n                <Box width=\"100vw\" height=\"100vh\" bgcolor={theme.palette.background.default}>\r\n                    {children}\r\n                </Box>\r\n            </ThemeProvider>\r\n        </ThemeContext.Provider>\r\n    );\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACjF,SAASC,GAAG,EAAEC,aAAa,QAAQ,eAAe;AAClD,OAAiB,eAAe;AAEhC,SAASC,SAAS,EAAEC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpD,MAAMC,YAAY,gBAAGX,aAAa,CAAC,CAAC,CAAsB,CAAC;AAE3D,OAAO,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,OAAOX,UAAU,CAACS,YAAY,CAAC;AACnC,CAAC;AAAAE,EAAA,CAFYD,kBAAkB;AAI/B,OAAO,MAAME,gBAA0B,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACnD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAmB,OAAO,CAAC;EAErE,MAAMgB,WAAW,GAAGnB,WAAW,CAAC,MAAM;IAClCkB,YAAY,CAACE,YAAY,IAAIA,YAAY,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC7E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGnB,OAAO,CAAC,MAAM;IACxB,IAAIe,SAAS,KAAK,OAAO,EAAE,OAAOV,UAAU;IAC5C,OAAOD,SAAS;EACpB,CAAC,EAAE,CAACW,SAAS,CAAC,CAAC;EAEf,oBACIR,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEN,SAAS;MAAEE;IAAY,CAAE;IAAAH,QAAA,eACrDP,OAAA,CAACJ,aAAa;MAACgB,KAAK,EAAEA,KAAM;MAAAL,QAAA,eACxBP,OAAA,CAACL,GAAG;QAACoB,KAAK,EAAC,OAAO;QAACC,MAAM,EAAC,OAAO;QAACC,OAAO,EAAEL,KAAK,CAACM,OAAO,CAACC,UAAU,CAACC,OAAQ;QAAAb,QAAA,EACvEA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhC,CAAC;AAAAlB,GAAA,CArBYF,gBAA0B;AAAAqB,EAAA,GAA1BrB,gBAA0B;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}